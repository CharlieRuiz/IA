# -*- coding: utf-8 -*-
"""salary_linearRegretion.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yGrbaDqBJ0uQ5RzVNPqs-qe02hV1Zfuo
"""

from google.colab import drive
drive.mount('/content/drive')

import numpy as np
import math
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.metrics import mean_squared_error, r2_score

dataset=pd.read_csv('/content/drive/My Drive/Salary_Data.csv')

dataset.head()

dataset.isna().sum()

x=dataset.iloc[:, :-1].values
y=dataset.iloc[:, -1].values

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 0)

from sklearn.linear_model import LinearRegression
regression = LinearRegression()
regression.fit(x_train, y_train)

y_predict = regression.predict(x_test)

# Commented out IPython magic to ensure Python compatibility.
# The coefficients
print('Coefficient: \n', regression.coef_)
# The mean squared error
print('Mean squared error: %.2f'
#       % mean_squared_error(y_test, y_predict))
# The coefficient of determination: 1 is perfect prediction
print('Coefficient of determination: %.2f'
#       % r2_score(y_test, y_predict))

#visualisation of the trainig data
plt.scatter(x_train, y_train, color = 'red')
plt.plot(x_train, regression.predict(x_train), color = 'blue')
plt.title('Salary v Years of Exp (Training set)')
plt.xlabel("Salary")
plt.ylabel("Experience")
plt.show()

#visualisation of the test data
plt.scatter(x_test, y_test, color = 'red')
plt.plot(x_train, regression.predict(x_train), color = 'blue')
plt.title('Salary v Years of Exp (Test set)')
plt.xlabel("Salary")
plt.ylabel("Experience")
plt.show()

#Calculating the salary base in experience
#print('The salary of a person with 3 years of experience is', math.ceil(regression.predict([[3]])[0]))

for i in range(len(y_test)):
  print("Predicted y: ", y_predict[i])
  print("Real y: ", y_test[i])
  print("\n")